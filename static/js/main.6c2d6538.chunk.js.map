{"version":3,"sources":["assets/noPosterSmall.png","Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","Container","div","Title","span","Grid","Section","title","children","role","aria-label","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","require","length","substring","Contianer","HomePresenter","nowPlaying","upcoming","popular","error","loading","Loader","map","movie","key","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Backdrop","bgImage","Data","h3","ItemContainer","Divider","Overview","p","Content","Cover","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6c2d6538.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.d0f261ba.png\";","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter( ({location : {pathname}}) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n)\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏱\n    </span>\n  </Container>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${props => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\")\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            🎖\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Contianer = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => (\n  <>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Contianer>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error}></Message>}\n      </Contianer>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"e544979d216a11ee7bdccc6cdbcb2a04\",\n    language: \"en-US\"\n  }\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: id =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(`search/movie`, {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: id =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(`search/tv`, {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying }\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming }\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular }\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movie information.\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, airingToday, popular, error, loading }) => (\n  <>\n    <Helmet>\n      <title>TV shows | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error}></Message>}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    airingToday: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated }\n      } = await tvApi.topRated();\n      const {\n        data: { results: airingToday }\n      } = await tvApi.airingToday();\n      const {\n        data: { results: popular }\n      } = await tvApi.popular();\n      this.setState({ topRated, popular, airingToday });\n    } catch (error) {\n      this.setState({\n        error: \"Can't find tv information\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { topRated, airingToday, popular, error, loading } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        airingToday={airingToday}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  loading,\n  handleSubmit,\n  error,\n  updateTerm\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      ></Input>\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n      </>\n    )}\n    {error && <Message text={error} color=\"e74c3c\"></Message>}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = event => {\n    const {\n      target: { value }\n    } = event;\n    this.setState({\n      searchTerm: value\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults }\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults }\n      } = await tvApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults\n      });\n    } catch (error) {\n      this.setState({ error: \"can't find any results\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        error={error}\n        loading={loading}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Helmet from \"react-helmet\";\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Nomfilx</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Nomfilx\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      ></Backdrop>\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\")\n          }\n        ></Cover>\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname }\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\")\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id }\n      },\n      history: { push }\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"can't find anything\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport Header from \"Components/Header\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\"></Redirect>\n      </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n  ${reset};\n  a{\n    text-decoration: none;\n    color: inherit;\n  }\n  *{\n    box-sizing: border-box;\n  }\n  body{\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size: 14px;\n    background-color: rgba(20, 20, 20, 1);\n    color: white;\n    padding-top: 50px;\n  }\n`;\n\nexport default globalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}